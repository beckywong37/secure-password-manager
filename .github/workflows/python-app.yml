# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# GenAI Citation for April:
# Portions of this code related to Postgres Tests were generated with
# the help of ChatGPT-5
# The conversation transcript [linked here](https://chatgpt.com/share/68fec1e7-10fc-8009-9bda-bdffef8ebea6)
# documents the GenAI Interaction that led to my code.
# See Pull Request here: https://github.com/beckywong37/secure-password-manager/pull/6

name: Python application

on: [push, pull_request]

permissions:
  contents: read

jobs:
  # Fast lane: SQLite
  tests-sqlite:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run Django Tests (SQLite)
        env:
          # Ensure we don't accidentally flip to Cloud SQL here
          USE_CLOUD_SQL: "False"
          DEBUG: "True"
          SECRET_KEY: "ci-only-not-prod"  # Don't need to fetch this from Secret Manager or GitHub Secrets for CI
        run: python manage.py test
  
  # Parity lane: Postgres via service container (no Cloud SQL)
  tests-postgres:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports: ["5432:5432"]
        # GitHub waits for the container to be “healthy” before running steps (simple wait)
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2-binary
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run Django Tests (Postgres)
        env:
          RUN_POSTGRES_TESTS: "1"
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: testdb
          PGHOST: 127.0.0.1
          PGPORT: "5432"
          DEBUG: "True"
          SECRET_KEY: "ci-only-not-prod"
        run: |
          # Optional: ensure migrations apply cleanly before tests
          python manage.py migrate --noinput
          python manage.py test
